========================================================================
    콘솔 응용 프로그램 : BGIocpServer 프로젝트 개요
========================================================================


/////////////////////////////////////////////////////////////////////////////
특징:
 1. 장점
  1) WorkerThread에 if문 1개도 없음 (CPU가 분기처리 되지 않도록)
  2) 타이머 스레드에서 busywating하지 않도록 설계 (window event활용)
  3) IOCP에서 send할 경우, 버퍼를 항상 만들어 줘야 하는데, 멀티스레드에서 잘 동작하도록 버퍼 재활용
  4) WorkerThread 종료시에, 다른 작업이 실행중에 종료되지 않도록 설계
  5) 타이머 종료시에, 기존에 등록된 타이머작업 안전하게 해제후 종료하도록 설계
  
  
  6) c++11 최대한 활용
   std::thread, 람다를 활용하여 스레드 생성함수 spawn 구현
   typedef 대신 using사용할수 있는부분 사용
   일관된 초기화 방법 사용 {}, nullptr으로 사용
   std::thread 강제 종료 기능 고민하다가, native_handle과 SuspendThread 사용 
   
  7) 재사용 가능하도록 객체 정의
  8) 자세한 주석
  
/////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////
버전 설명:
[1.00 버전]
 -BGProto프로젝트에서 만든 공통적으로 쓰이는 객체 적용
  BGSingleton,  BGConfigManager,  BGLogManager

[1.01 버전]
 -멀티스레드에서 사용 가능한 기본적인 객체 구현
  BGIOObject, BGIOCompletionHandler, BGIOThread, BGIOAcceptThread, BGIOServer

[1.02 버전]
 -타이머 객체 만들어, BGIOObject를 상속하면 기능 사용 가능하도록 구현
 특징:
  1. 하나의 스레드가 담당해서 동작
  2. 불필요한 while문을 돌지 않는다.
  (BG Proto 프로젝트에서는 항상 while을 돌면서 타이머 동작이 있는지 여부를 검사했다.)

 수정되어야 할 사항:
  1. 하나의 스레드에서 실제 객체의 동작까지 돌아간다.
  -> BG Proto 프로젝트에서는 타이머 스레드와 워커 스레드가 연동되어, 실제 객체의 동작은 워커 스레드에서 담당하도록 처리하였다.
  
 [1.03 버전]
 -멀티스레드에서 사용 가능한 각종 IOLock, IOBuffer 구현
  BGIOBuffer 객체
   특징 : 한번 할당 받은 버퍼는 지우지 않고 재활용 한다.
   -> TCP 전송을 하기 위한 버퍼로 사용된다.

  BGIOLock 객체
  1) BGLockInfo 객체
   스레드 로컬 변수로 선언되며, 스레드마다 객체가 생성된다.
   스레드 소멸시에 객체도 소멸된다.
   스레드마다 pending 된 락의 갯수, lock 된 시각 정보를 가지고 있다.

  2) BGILock 객체
   Lock객체 중 가장 상위 객체
   static 객체로 LockInfo를 map으로 관리하고,
   해당 map을 동기화 시키기 위한 BGRWLock을 가지고 있다.
   
  [1.04 버전]
  -BGIOSocket 구현
  
  
  
  [1.05 버전]
  -BGWorkerThread 구현
  
  
  [1.06 버전]
  -스레드를 종료할 수 있는 BGIOTerminate를 구현
  -config 사용법을 개선하기 위해 BGMainConfig 생성
  -BGIOServer를 사용하는데 필수적인 IOCP와 WorkerThread를 관리해주는 BGLayer 객체를 구현
  
  [1.07 버전]
  -이제까지 구현한 것들을 테스트 하기 위해 환경을 구축하고, TestSample 객체들을 생성한다.
  
  
/////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////
고려했던 사항들&이슈들&고민사항 정리:

(1.06버전부터 기록 시작)
- 워커스레드 안전하게 종료하는 방법, std::thread 강제 종료하는 법
- 기본적인 BGServer가 동작하는데 필수적인 객체들 관리해야 할 것 같음 (BGLayer 생성)
- 변수명, 주석 등등 통일성
- Config.ini에 정의된 값들 BGConfig만들어, BGConfigManager 로드 이후에 매번 읽지 않고, 한번 저장후 해당값만 사용하도록 개선



/////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
개선이 필요한 부분:
 1) 타이머 스레드 개선사항
 Timer에서 동작이 Timer Thread에서만 처리된다.
 해당 Thread에 부하가 걸릴수 있어, Timer 에서 처리되는 작업을
 IOCP와 연결된 WorkerThread에 넘겨 스레드 사용이 균등하도록 작업
 -> Timer Thread는 타이머 작업을 확인하여 WorkerThread에 넘기는 일만 하도록 변경한다.

 2) 각종 lock 객체 구현
 사실 검증이 안되어서, std::14에 나온 lock을 사용하는게 좋을 것도 같다.
 
/////////////////////////////////////////////////////////////////////////////



